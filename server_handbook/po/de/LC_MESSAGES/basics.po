#
msgid ""
msgstr ""
"Project-Id-Version: SysAdm™ Server Handbook 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-09-16 13:41-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../basics.rst:14
msgid "Getting Started"
msgstr ""

#: ../../basics.rst:54
msgid "To run under rc(8)"
msgstr ""

#: ../../basics.rst:66
msgid "To run under jobd(8)"
msgstr ""

#: ../../basics.rst:79
msgid "Port 12149 for WebSocket interaction."
msgstr ""

#: ../../basics.rst:80
msgid "Port 12150 for the REST interface."
msgstr ""

#: ../../basics.rst:89
msgid "Bridge Initialization"
msgstr ""

#: ../../basics.rst:98
msgid ""
"A list of current commands is available by typing :command:`-h` after the "
"utility name (Example: :command:`sysadm-bridge -h`)."
msgstr ""

#: ../../basics.rst:107
msgid ""
"To initialize the server and bridge, begin with the server. Run "
":command:`sudo sysadm-binary bridge_export_key [optional absolute file "
"path]`. This will export the public SSL key the server uses to authenticate "
"with the bridge."
msgstr ""

#: ../../basics.rst:112
msgid ""
"For both server and client, give SSL key files an easy to remember name and "
"location to simplify the process of finding those files for import to the "
"bridge."
msgstr ""

#: ../../basics.rst:116
msgid ""
"Now, we must transition to the bridge to import the server key. Login to the"
" bridge as the administrator (or root), then type :command:`sysadm-bridge "
"import_ssl_file <filename> <filepath>`, replacing <filename> and <filepath> "
"with the server key filename and location. Once the server key file is "
"successfully imported, start the bridge (if not already running)."
msgstr ""

#: ../../basics.rst:123
msgid ""
"The bridge can import SSL files regardless of its active state with no "
"negative effects."
msgstr ""

#: ../../basics.rst:126
msgid ""
"Back on the server, run :command:`sudo sysadm-binary bridge_add <nickname> "
"<URL>` to point the server at the bridge. A bridge runs on **port 12149** by"
" default, so the URL will likely need **:12149** added on the end of the "
"address (Example URL: 127.0.0.1:12149). If necessary, (re)start the server. "
"The log (:file:`/var/log/sysadm-server-ws.log`) will display messages about "
"connecting to the bridge. If properly configured, the server and bridge will"
" now be communicating with each other. At this point, clients can be added "
"to the mix which will communicate with the server through the bridge."
msgstr ""

#: ../../basics.rst:140
msgid "Adding a Client to the Server/Bridge Connection"
msgstr ""

#: ../../basics.rst:146
msgid ""
"In the client UI, create or import an SSL key bundle as prompted by the UI. "
"Once the new SSL keys are created, open :menuselection:`Setup SSL --> View "
"Certificates` in the connection manager and click :guilabel:`Export Public "
"Key` for both the server and bridge keys. This will export both SSL keys in "
"file form, depositing them in either the :file:`Desktop` folder or home "
"directory (depending on operating system). If necessary, send these key "
"files as an email attachment to the system administrator as part of a "
"request for server/bridge access."
msgstr ""

#: ../../basics.rst:156
msgid ""
"Moving to the bridge, as the administrator (or root), run :command:`sysadm-"
"bridge import_ssl_file <nickname> <filepath>` for the requesting client's "
"bridge key file. Now the client and bridge should be able to communicate, "
"but the client/server connection still needs to be established."
msgstr ""

#: ../../basics.rst:162
msgid ""
"On the server, run :command:`sudo sysadm-binary import_ssl_key <username> "
"<filepath> [<email>]` to import the client -> server SSL key file. This "
"grants an individual with the specific SSL authorization the same "
"permissions as <user>."
msgstr ""

#: ../../basics.rst:166
msgid ""
"Back in the user client, open the connection manager and choose "
":guilabel:`Bridge Relay` as the connection option. Input the established "
"bridge's URL and click :guilabel:`Connect`. The bridge will now show up in "
"the menu tree with a different icon, and will have a sub-menu of connections"
" within it. Click on the bridged system to will open the standard UI, but "
"note the connection is still being relayed through the bridge."
msgstr ""

#: ../../basics.rst:24
msgid "Building |sysadm|"
msgstr ""

#: ../../basics.rst:26
msgid "Several Qt Modules are required before attempting to build |sysadm|:"
msgstr ""

#: ../../basics.rst:35
msgid ""
"Building the prototype version of |sysadm| assumes you have access to "
"github.com."
msgstr ""

#: ../../basics.rst:49
msgid "Starting |sysadm|"
msgstr ""

#: ../../basics.rst:51
msgid ""
"|sysadm| can be started one of two ways: the traditional rc(8) mechanism or "
"using the new jobd(8) mechanism"
msgstr ""

#: ../../basics.rst:76
msgid ""
"Several ports on the system firewall will need to be opened for |sysadm| to "
"have remote access functionality:"
msgstr ""

#: ../../basics.rst:81
msgid "Port 12151 for the |sysadm| bridge server."
msgstr ""

#: ../../basics.rst:83
msgid "The user can also designate their own ports for |sysadm|."
msgstr ""

#: ../../basics.rst:91
msgid ""
"Configuring and connecting to a bridge can be a complicated process. "
"Thankfully, there are several steps that are done the first time a server "
"and bridge are configured with |sysadm| but do not need to be repeated "
"later. Once these steps are complete, it becomes a much simpler process for "
"a new user to configure their client to communicate with the now configured "
"server and bridge."
msgstr ""

#: ../../basics.rst:142
msgid ""
"If you have an old SSL bundle from a pre-alpha version of |sysadm| created "
"before June 2016, it will need to be removed prior to proceeding with the "
"client initialization process."
msgstr ""

#: ../../basics.rst:16
msgid ""
"Beginning with |sysadm| is a relatively simple process. |sysadm| files are "
"currently available from the `github repository "
"<https://github.com/trueos/sysadm>`_"
msgstr ""

#: ../../basics.rst:105
msgid "Server and Bridge"
msgstr ""

#~ msgid ""
#~ "Beginning with SysAdm™ is a relatively simple process. SysAdm™ files are "
#~ "currently available from the `github repository "
#~ "<https://github.com/trueos/sysadm>`_"
#~ msgstr ""

#~ msgid "Server and Bridge Initialization"
#~ msgstr ""

#~ msgid "Building SysAdm™"
#~ msgstr ""

#~ msgid "Several Qt Modules are required before attempting to build SysAdm™:"
#~ msgstr ""

#~ msgid ""
#~ "Building the prototype version of SysAdm™ assumes you have access to "
#~ "github.com."
#~ msgstr ""

#~ msgid "Starting SysAdm™"
#~ msgstr ""

#~ msgid ""
#~ "SysAdm™ can be started one of two ways: the traditional rc(8) mechanism or "
#~ "using the new jobd(8) mechanism"
#~ msgstr ""

#~ msgid ""
#~ "Several ports on the system firewall will need to be opened for SysAdm™ to "
#~ "have remote access functionality:"
#~ msgstr ""

#~ msgid "Port 12151 for the SysAdm™ bridge server."
#~ msgstr ""

#~ msgid "The user can also designate their own ports for SysAdm™."
#~ msgstr ""

#~ msgid ""
#~ "Configuring and connecting to a bridge can be a complicated process. "
#~ "Thankfully, there are several steps that are done the first time a server "
#~ "and bridge are configured with SysAdm™ but do not need to be repeated later."
#~ " Once these steps are complete, it becomes a much simpler process for a new "
#~ "user to configure their client to communicate with the now configured server"
#~ " and bridge."
#~ msgstr ""

#~ msgid ""
#~ "If you have an old SSL bundle from a pre-alpha version of SysAdm™ created "
#~ "before June 2016, it will need to be removed prior to proceeding with the "
#~ "client initialization process."
#~ msgstr ""
